@model MMS.Entities.Models.GlobalCompany

@{
    ViewBag.Title = "GlobalCompany Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {

        var user = {
            Initialize: function () {


                $("#page-leftbar li").removeClass("active");

                $("#liAdmin").addClass("active");
                $("#liUserSetup").addClass("active");

                var optionalLabel = 'Please Select..';
                $('#ddlmoduleId').change(function (event) {

                    if ($('#ddlmoduleId').val() == '' || $('#ddlmoduleId').val() == null) {
                        $("#ddlroleId").empty();

                        $("#ddlroleId").append($('<option/>', {
                            value: "",
                            text: optionalLabel
                        }));
                        return false;
                    }
                    else {
                        LoadDropDownList('ddlroleId'
                     , '@Url.Content("~/Role/GetRoleByModuleId")?moduleId=' + $('#ddlmoduleId').val()
                      , "Please Select.."
                      , null);

                    }


                });
               
            },

        }
        user.Initialize();

    });



</script>
@section breadcrumb
{
    <li><a href="~/Dashboard/index">Dashboard</a></li>
    <li>Administration</li>
    <li class="active">User Setup</li>
}
@*@section title
    {
        @ViewBag.Title
    }*@

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }

    .backTolist {
        font-size: 1em;
        font-weight: normal;
    }

        .backTolist:hover {
            text-decoration: none;
        }

    .fileSets {
        border: 1px dotted #ddd;
        margin: 0px 10px 20px 0;
        padding: 20px 10px 0px 10px;
    }

    .required:after {
        content: " *";
        color: #f00;
    }

    legend.scheduler-border {
        width: inherit; /* Or auto */
        padding: 0 10px; /* To give a bit of padding on the left and right */
        border-bottom: none;
    }
</style>

<hr />

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(x => x.GlobalCompanyId)
    <div class="panel panel-info">

        <div class="panel-heading">
            @ViewBag.Title.ToString()

        </div>
        <div class="panel-body">
            <div class="row">

                <div class="col-sm-12">
                    <fieldset class="fileSets">
                        <legend class="scheduler-border">Global Company Info</legend>
                        <div class="form-group">

                            @Html.LabelFor(model => model.GlobalCompanyName, new { @class = "col-sm-4 control-label required" })
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.GlobalCompanyName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.GlobalCompanyName)
                            </div>
                        </div>


                        <div class="form-group">

                            @Html.LabelFor(model => model.FacebookUrl, new { @class = "col-sm-4 control-label required" })
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.FacebookUrl, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FacebookUrl)
                            </div>
                        </div>
                        <div class="form-group">

                            @Html.LabelFor(model => model.Url, new { @class = "col-sm-4 control-label required" })
                            <div class="col-sm-4">
                                @Html.DisplayFor(model => model.Url, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FacebookUrl)
                            </div>
                        </div>
                        <div class="form-group">

                            @Html.LabelFor(model => model.CssOverwrite, new { @class = "col-sm-4 control-label required" })
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.CssOverwrite, new { @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CssOverwrite)
                            </div>
                        </div>

                   

                       
                        <div class="form-group">

                            @Html.LabelFor(model => model.Contact, new { @class = "col-sm-4 control-label required" })
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.Contact, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Contact)
                            </div>
                        </div>


                        <div class="form-group">

                            @Html.LabelFor(model => model.Email, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="checkbox" class="col-sm-4 control-label"></label>
                            <div class="col-sm-4">
                                <div class="checkbox block">
                                    <label>
                                        @Html.CheckBoxFor(model => model.IsActive) @Html.LabelFor(model => model.IsActive)
                                    </label>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-8 col-sm-offset-3">
                    <div class="btn-toolbar">
                        <input type="submit" value="Update" class="btn-primary btn" onclick=" return EditConfirm()" />
                    </div>
                </div>
            </div>


        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
