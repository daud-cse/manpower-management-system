@model MMS.Entities.Models.FMS_SubsidyAccount

@{
    ViewBag.Title = "GL SubsidyType Map";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/dist/css/bootstrap-select.css">
<script type="text/javascript">
    $(document).ready(function () {

        $(document).ready(function () {

            var subsidyMap = {
                listSubsidy: "<tr><td style='display:none;'><input type='hidden' class='classTransactionDetId' id='TransactionDetId' name=[TransactionDetIdName].SLNO value=[TransactionDetId]></td><td style='display:none;'><input type='hidden' class='classSubsidyAccountId' id='SubsidyAccountId' name=[SubsidyAccountIdName].SLNO value=[SubsidyAccountId]></td><td>[GlAccountName]</td><td>[SubsidyId]</td><td>[SubsidyName]</td><td class='drAmount'>[BankAccountNo]</td><td class='crAmount'>[BankName]</td><td><button type='button' class='mapped btn btn-danger btn-sm'><span class='glyphicon glyphicon-remove-sign'></span>Mapped</button></td><td><button type='button' class='update btn btn-danger btn-sm'><span class='glyphicon glyphicon-remove-sign'></span>Update</button></td><td><button type='button' class='remove btn btn-danger btn-sm'><span class='glyphicon glyphicon-remove-sign'></span>Delete</button></td></tr>",
                subsidy: {

                },
                subsidyMapdet: [],
                Initialize: function () {

                    $("#page-leftbar li").removeClass("active");
                    $("#liAdmin").addClass("active");
                    $("#AgentTypeID").attr('data-live-search', true);
                    $("#NationalityID").attr('data-live-search', true);

                    var optionalLabel = 'Please Select..';
                    $('#ddlSubsidyType').change(function (event) {

                        //if ($('#ddlDivisionId').val() == '' || $('#ddlDivisionId').val() == null) {
                        //    $("#ddlDistrict").empty();
                        //    $("#PermanentUpazilaID").empty();
                        //    $("#ddlDistrict").append($('<option/>', {
                        //        value: "",
                        //        text: optionalLabel
                        //    }));
                        //    $("#PermanentUpazilaID").append($('<option/>', {
                        //        value: "",
                        //        text: optionalLabel
                        //    }));
                        //    return false;
                        //}
                        //else {
                        $("#tbSubsidy").empty();
                       // $("#ddlMappedId").empty();
                        LoadDropDownList('ddlGLAccount'
                         , '@Url.Content("~/GLSubsidyTypeMap/GetGLAccountBySubsidyType")?subsidyTypeId=' + $('#ddlSubsidyType').val()
                      , "Please Select.."
                      , null);
                        //$("#PermanentUpazilaID").empty();
                        //$("#PermanentUpazilaID").append($('<option/>', {
                        //    value: "",
                        //    text: optionalLabel
                        //}));

                        //}



                    });
                    @*$('#ddlGLAccount').change(function (event) {

                        var url = '@Url.Content("~/SubsidyAccount/GetSubsidyTypeWise")';
                        $.ajax({
                            type: "POST",
                            url: url,
                            data: "GLAccountId=" + $('#ddlGLAccount').val() + "&subsidyTypeId=" + $('#ddlSubsidyType').val(),
                            dataType: "json",
                            success: function (data) {
                                var GLAccountName = $("#ddlGLAccount option:selected").text();
                                $("#tbSubsidy").empty();
                                for (var i = 0; i < data.length; i++) {
                                    var value = subsidyMap.listSubsidy.replace("[GlAccountName]", GLAccountName).replace("[SubsidyId]", data[i].SubsidyId).replace("[SubsidyName]", data[i].SubsidyName);//.replace("[ChequeNo]", chequeNo);
                                    $("#tbSubsidy").prepend(value);
                                }


                            },
                            error: function (error) {
                                alert(error);
                            }
                        });
                    });*@
                    $('#ddlMappedId').change(function (event) {
                        if ($('#ddlGLAccount').val() == null || $('#ddlGLAccount').val()=='') {

                            alert('Please Select GL Account.');
                            return false;
                        }

                        var url = '@Url.Content("~/SubsidyAccount/GetSubsidyTypeWise")';
                        $.ajax({
                            type: "POST",
                            url: url,
                            data: "GLAccountId=" + $('#ddlGLAccount').val() + "&subsidyTypeId=" + $('#ddlSubsidyType').val() + "&MappedId=" + $('#ddlMappedId').val(),
                            dataType: "json",
                            success: function (data) {
                                var GLAccountName = $("#ddlGLAccount option:selected").text();
                                $("#tbSubsidy").empty();
                                for (var i = 0; i < data.length; i++) {
                                    var value = subsidyMap.listSubsidy.replace("[GlAccountName]", GLAccountName).replace("[SubsidyId]", data[i].SubsidyId).replace("[SubsidyName]", data[i].SubsidyName);//.replace("[ChequeNo]", chequeNo);
                                    $("#tbSubsidy").prepend(value);
                                }


                            },
                            error: function (error) {
                                alert(error);
                            }
                        });
                    });
                    
                    $('#applicant_ID').change(function () {
                        var applicantID = $('#applicant_ID').val();

                        var url = "/LocationChangeVM/GetApplicantLocation?Id=" + $("#applicant_ID").val() + "&IsApplicant=true";
                        window.location = url;
                    });


                },
                GetAgent: function (id) {
                    var url = '@Url.Content("~/Agent/GetAgent")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: { id: id },
                        dataType: "json",
                        success: function (data) {

                            for (var i = 0; i < data.StockOutList.length; i++) {
                                $("#tbSubsidy").empty();
                                var value = materialforrequsition.listTemplate.replace("[materialid]", data.StockOutList[i].Material.Id).replace("[material]", data.StockOutList[i].Material.Name).replace("[RequiredQuantity]", data.StockOutList[i].Quantity).replace("[AvgPrice]", data.StockOutList[i].replace("[UnitofmeasurementName]", data.StockOutList[i].Material.Unitofmeasurement.Name));
                                $("#tbSubsidy").prepend(value);
                            }
                        },
                        error: function (error) {
                            alert(error);
                        }
                    });
                },

            }
            subsidyMap.Initialize();

        });
    });



</script>

<script src="~/dist/js/bootstrap-select.js"></script>
@section breadcrumb
{
    <li><a href="~/Dashboard/index">Dashboard</a></li>
    <li>Administration</li>
    <li class="active">Subsidy Type Map</li>
}
@*@section title
    {
        @ViewBag.Title
    }*@

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }

    .backTolist {
        font-size: 1em;
        font-weight: normal;
    }

        .backTolist:hover {
            text-decoration: none;
        }

    .fileSets {
        border: 1px dotted #ddd;
        margin: 0px 10px 20px 0;
        padding: 20px 10px 0px 10px;
    }

    .required:after {
        content: " *";
        color: #f00;
    }

    legend.scheduler-border {
        width: inherit; /* Or auto */
        padding: 0 10px; /* To give a bit of padding on the left and right */
        border-bottom: none;
    }
</style>
<p> @Html.ActionLink("Go Back to  List", "Index", null, null, new { @class = "btn btn-success btn-xs" })</p>
<hr />

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="panel panel-info">

        <div class="panel-heading">
            @ViewBag.Title.ToString()

        </div>
        <div class="panel-body">
            <div class="row">

                <div class="col-sm-12">
                    <fieldset class="fileSets">
                        <legend class="scheduler-border">Subsidy Type Map</legend>

                        <div class="form-group">

                            @Html.LabelFor(model => model.SubsidyTypeId, new { @class = "col-sm-4 control-label required" })
                            <div class="col-sm-4">
                                @Html.DropDownListFor(model => model.SubsidyTypeId, new SelectList(Model.kvpSubsidyType, "Key", "Value", Model.SubsidyTypeId), "Select Subsidy Type", new { id = "ddlSubsidyType", @class = "" })
                                @Html.ValidationMessageFor(model => model.SubsidyTypeId)
                            </div>
                        </div>


                        <div class="form-group">

                            @Html.LabelFor(model => model.GLAccountId, new { @class = "col-sm-4 control-label required" })
                            <div class="col-sm-4">
                                @Html.DropDownListFor(model => model.GLAccountId, new SelectList(Model.kvpGLAccount, "Key", "Value", Model.GLAccountId), "Select GL Account", new { id = "ddlGLAccount" })
                                @Html.ValidationMessageFor(model => model.GLAccountId)
                            </div>
                        </div>

                        <div class="form-group">

                            @Html.Label("Map", new { @class = "col-sm-4 control-label required" })
                            <div class="col-sm-4">
                                @Html.DropDownList("MappedId", new List<SelectListItem>
                        {
                            new SelectListItem {Text = "-- Select Map --", Value = ""},new SelectListItem {Text = "All", Value = "1"},new SelectListItem {Text = "Mapped", Value = "2"}, new SelectListItem {Text = "UnMapped", Value = "3"}
                        }, new { @class = "form-control", id = "ddlMappedId" })
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
            <div id="" class="form-group">
                <table id="tblSubsidy" class="table table-hover">
                    <thead>
                        <tr>
                            <th>Account Name</th>
                            <th>Subsidy Account Id</th>

                            <th></th>
                        </tr>

                    </thead>

                    <tbody id="tbSubsidy" class="connectedSortable"></tbody>

                    <tfoot>
                        <tr id="">
                            <td></td>

                            <td align="right"></td>

                            <td></td>
                            <td></td>


                        </tr>
                    </tfoot>
                </table>
            </div>
            <div class="row">
                <div class="col-sm-8 col-sm-offset-3">
                    <div class="btn-toolbar">
                        <input type="submit" value="Create" class="btn-primary btn" onclick=" return AddConfirm()" />
                    </div>
                </div>
            </div>


        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

