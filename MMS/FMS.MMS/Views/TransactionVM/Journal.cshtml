@model MMS.Entities.ViewModels.FMS_TransactionVM
@using MMS.Utility;
@{
    ViewBag.Title = @Model.Transaction.FMS_VoucherType.VoucherTypeName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/dist/css/bootstrap-select.css">
<script type="text/javascript">
    $(document).ready(function () {

        var IsSubsidyExsit=false;
        var subsidyTypeId=0;
        var TransactionVM = {
            listTransactionDet: "<tr><td style='display:none;'><input type='hidden' class='classTransactionDetId' id='TransactionDetId' name=[TransactionDetIdName].SLNO value=[TransactionDetId]></td><td style='display:none;'><input type='hidden' class='classGlAccountId' id='GlAccountId' name=[GlAccountIdName].SLNO value=[GlAccountId]></td><td style='display:none;'><input type='hidden' class='classSubsidyTypeId' id='SubsidyTypeId' name=[SubsidyTypeIdName].SLNO value=[SubsidyTypeId]></td><td style='display:none;'><input type='hidden' class='classSubsidyAccountId' id='SubsidyAccountId' name=[SubsidyAccountIdName].SLNO value=[SubsidyAccountId]></td><td>[GlAccountName]</td><td>[SubsidyName]</td><td class='drAmount'>[DrAmount]</td><td class='crAmount'>[CrAmount]</td><td>[ChequeNo]</td><td>[Particulars]</td><td style='display:none;'><input type='hidden' class='classSubsidyId' id='SubsidyId' name=[SubsidyIdName].SLNO value=[SubsidyId]></td><td><button type='button' class='EditTransactionDet btn btn-primary'><span class='glyphicon glyphicon-remove-sign'></span>Edit</button><td><button type='button' class='remove btn btn-danger btn-sm'><span class='glyphicon glyphicon-remove-sign'></span>Delete</button></td></tr>",
            Transaction:{
            },
            TransactionDet: [],
            Initialize: function () {
                $("#divSubsidyAccountId").hide();
                $("#divSubsidyTypeId").hide();
                $("#TransactionDet2_DrAmount").val('');
                $("#TransactionDet2_CrAmount").val('');
                $("#divChequeNo").hide();
                var $tabs = $('#tblApplicant');
                // $("#GLAccountDDL").attr('data-live-search', true);
                $("tbody.connectedSortable").sortable({
                    connectWith: ".connectedSortable",
                    //items: "> tr:not(:first)",
                    appendTo: $tabs,
                    helper: "clone",
                    zIndex: 999990
                }).disableSelection();
                var $tab_items = $(".nav-tabs > li", $tabs).droppable({
                    accept: ".connectedSortable tr",
                    hoverClass: "ui-state-hover",
                    drop: function (event, ui) {
                        return false;
                    }
                });
                if(parseFloat(@Model.Transaction.TransactionId)>0){
                    TransactionVM.TransactionDetList();
                }
                $('.input-group.date').datepicker({
                    todayBtn: "linked",
                    language: "it",
                    autoclose: true,
                    todayHighlight: true,
                    format: 'dd/mm/yyyy'
                });
                var IsOppsiteEntry=false;
                $('#ddlSubsidyType').change(function (event) {
                    TransactionVM.EmptySubsidyInfo();
                    $("#TransactionDet2_SubsidyTypeId").val($('#ddlSubsidyType').val());


                });
                $('#GLAccountDDL').change(function (event) {
                    if($('#GLAccountDDL').val()=='' || $('#GLAccountDDL').val()==0){
                        return false;
                    }
                    TransactionVM.GetGLInfo($('#GLAccountDDL').val());
                });
                $(document).on('keypress', 'input#TransactionDet2_DrAmount', function (e) {

                    var code = (e.keyCode ? e.keyCode : e.which);
                    if (code == 13) { //Enter keycode

                        $("#btnAdd").trigger("click");
                    }
                });
                $(document).on('keypress', 'input#TransactionDet2_CrAmount', function (e) {

                    var code = (e.keyCode ? e.keyCode : e.which);
                    if (code == 13) { //Enter keycode

                        $("#btnAdd").trigger("click");
                    }
                });
                $("#btnAdd").click(function () {
                    var searchItem = $("#searchItem").val();
                    var drAmount = $("#TransactionDet2_DrAmount").val();
                    var crAmount = $("#TransactionDet2_CrAmount").val();
                    var particulars = $("#TransactionDet2_Particulars").val();
                    var SubsidyTypeId=$("#TransactionDet2_SubsidyTypeId").val();
                    var TransactionDetId=$("#TransactionDet2_TransactionDetId").val();
                    var GLAccountId = $("#GLAccountDDL option:selected").val();
                    var SubsidyAccountId = $("#TransactionDet2_SubsidyAccountId").val();
                    var SubsidyId= $("#SubsidyId").val();
                    var SubsidyName = $("#SubsidyName").val();
                    var chequeNo=$("#TransactionDet2_ChequeNo").val();
                    var GLAccountName = $("#GLAccountDDL option:selected").text();
                    // alert($("#TransactionDet2_SubsidyAccountId").val());
                    if (SubsidyAccountId==0) {
                        if(IsSubsidyExsit=="True"){
                            alert("Please give the Subsidy.");
                            $("#searchItem").focus();
                            return false;
                        }
                    }
                    if (GLAccountId == "" || GLAccountId == 0) {
                        alert("Please Select the GL Account.");
                        $("#TransactionDet2_DrAmount").focus();
                        return false;
                    }
                    if ((drAmount == "" || drAmount == 0 )&&(crAmount == "" || crAmount == 0)) {
                        alert("Please Give Amount.");
                        $("#TransactionDet2_DrAmount").focus();
                        return false;
                    }
                    if(drAmount>0 && crAmount>0){
                        alert("Only One Amount You Can Give!.");
                        $("#TransactionDet2_DrAmount").focus();
                        return false;
                    }
                    var value = TransactionVM.listTransactionDet.replace("[TransactionDetId]",TransactionDetId).replace("[GlAccountId]", GLAccountId).replace("[SubsidyAccountId]",SubsidyAccountId).replace("[SubsidyTypeId]",SubsidyTypeId).replace("[GlAccountName]", GLAccountName).replace("[DrAmount]", drAmount).replace("[CrAmount]", crAmount).replace("[Particulars]", particulars).replace("[SubsidyName]", SubsidyName).replace("[ChequeNo]",chequeNo).replace("[SubsidyId]",SubsidyId);
                    var isDuplicate = false;
                    $("#tblApplicant tr").each(function (index){
                        var tdGlAccountId='';
                        var tdSubsidyAccountId='';
                        var tdSubsidyTypeId='';
                        $("td", this).each(function (index) {
                            if (index == 1) {
                                tdGlAccountId=$(this).find($(":input")).val();
                            }
                            if (index == 2) {
                                tdSubsidyTypeId=$(this).find($(":input")).val();
                            }

                            else if (index ==3) {
                                tdSubsidyAccountId=$(this).find($(":input")).val();
                            }

                        });
                        if ((tdGlAccountId== GLAccountId) && (tdSubsidyAccountId==SubsidyAccountId)) {
                            isDuplicate = true;
                            $("#searchItem").val('');
                            $("#SubsidyId").val('');
                            $("#SubsidyName").val('');
                            $("#TransactionDet2_SubsidyAccountId").val('');
                            $("#TransactionDet2_SubsidyTypeId").val('');

                            $("#TransactionDet2_DrAmount").val('');
                            $("#TransactionDet2_ChequeNo").val('');
                            $("#TransactionDet2_Particulars").val('');
                            $("#TransactionDet2_CrAmount").val('');
                            TransactionVM.Typehead();
                        }

                        if(SubsidyAccountId=='' || SubsidyAccountId==' undefined'){
                            if(tdGlAccountId == GLAccountId){
                                isDuplicate = true;
                                $("#searchItem").val('');
                                $("#SubsidyId").val('');
                                $("#SubsidyName").val('');
                                $("#TransactionDet2_SubsidyAccountId").val('');
                                $("#TransactionDet2_SubsidyTypeId").val('');
                                $("#TransactionDet2_DrAmount").val('');
                                $("#TransactionDet2_ChequeNo").val('');
                                $("#TransactionDet2_Particulars").val('');
                                $("#TransactionDet2_CrAmount").val('');
                                TransactionVM.Typehead();
                            }
                        }

                        if (isDuplicate == true) {
                            $("td", this).each(function (index) {
                                if (index == 6) {
                                    $(this).html(drAmount);
                                }
                                else if (index ==7) {
                                    $(this).html(crAmount);
                                }
                                else if (index ==8) {
                                    $(this).html(chequeNo);
                                }
                                else if (index ==9) {
                                    $(this).html(particulars);
                                }
                            });

                            $(this).addClass("danger");
                            return false;
                        }
                    });
                    if (isDuplicate == false) {
                        var len = $('#tbApplicant tr').length;
                        if (len == 0) {
                            $("#tbApplicant").prepend(value);
                            $("#tbApplicant tr:last").addClass("success");
                        }
                        else {
                            $("#tbApplicant tr:last").after(value);
                            $("#tbApplicant tr:last").addClass("success");
                        }
                        $("#searchItem").val('');
                        $("#TransactionDet2_DrAmount").val('');
                        $("#TransactionDet2_Particulars").val('');
                        $("#TransactionDet2_CrAmount").val('');
                        $("#TransactionDet2_ChequeNo").val('');
                        $("#SubsidyId").val('');
                        $("#SubsidyName").val('');
                        $("#TransactionDet2_SubsidyAccountId").val('');
                        TransactionVM.Typehead();
                    }
                    TransactionVM.TotalCalculation();
                    $("#searchItem").focus();
                });

                TransactionVM.Typehead();
            },
            TransactionDetList:function(){

                var drAmount=0;
                var crAmount=0;
                @foreach (var item in Model.TransactionDetList.ToList())
                {
                    if (@item.ChequeNo == null)
                    {
                        item.ChequeNo = "";
                    }

                    if (@item.Particulars == null)
                    {
                        item.Particulars = "";
                    }

                    <text>
                var value = '';
                drAmount+=@item.DrAmount;
                crAmount+=@item.CrAmount;
                var value = TransactionVM.listTransactionDet.replace("[TransactionDetId]",'@item.TransactionDetId').replace("[GlAccountId]", '@item.GLAccountId').replace("[SubsidyAccountId]",'@item.SubsidyAccountId').replace("[SubsidyTypeId]",'@item.SubsidyTypeId').replace("[GlAccountName]", '@item.FMS_GLAccount.GLAccountName').replace("[DrAmount]",'@item.DrAmount').replace("[CrAmount]", '@item.CrAmount').replace("[Particulars]",'@item.Particulars.Replace("\n", "")').replace("[SubsidyName]", '@item.FMS_SubSidyVM.SubsidyName').replace("[ChequeNo]",'@item.ChequeNo').replace("[SubsidyId]",'@item.FMS_SubSidyVM.SubsidyId');
                $("#tbApplicant").prepend(value);
                </text>

                }
                $("#DrTotal").val(drAmount.toFixed(2));
                $("#CrTotal").val(crAmount.toFixed(2));
            },
            GetGLInfo:function(glid){

                var url = '@Url.Content("~/GLSubsidyTypeMap/IsCheckGLSubsidyExist")';
                $.ajax({
                    type: "POST",
                    url: url,
                    data: "GLAccountId=" + $('#GLAccountDDL').val(),
                    dataType: "json",
                    success: function (data) {
                        //Global Variable
                        IsSubsidyExsit=data.IsCheckSubsidyExist;
                        subsidyTypeId=data.SubsidyTypeId;
                        TransactionVM.EmptySubsidyInfo();
                        $("#ddlSubsidyType").empty();


                        var GLAccountId=  $('#GLAccountDDL').val();
                        var IsOppsiteEntry=true;


                        if(data.IsCheckSubsidyExist=="True"){
                            $("#divSubsidyTypeId").show();
                            $.each(data.lstSubsidyType, function (index, itemData) {
                                $("#ddlSubsidyType").append($('<option/>', {
                                    value: data.lstSubsidyType[index]["Key"],
                                    text: data.lstSubsidyType[index]["Value"]
                                }));
                                if(data.lstSubsidyType.length==1){
                                    $("#TransactionDet2_SubsidyTypeId").val(data.lstSubsidyType[index]["Key"]);
                                    $("#divSubsidyTypeId").hide();
                                }
                                else if(index==0){
                                    $("#TransactionDet2_SubsidyTypeId").val(data.lstSubsidyType[index]["Key"]);
                                }
                            });
                            TransactionVM.VoucherTypeWiseUILoad(@Model.Transaction.VoucherTypeId,data.IsCheckSubsidyExist);

                        }
                        else{
                            $("#divSubsidyTypeId").hide();
                            $("#searchItem").val("");
                            $("#TransactionDet2_Particulars").focus();
                            //$("#TransactionDet2_DrAmount").focus();
                            $("#SubsidyId").val("");
                            $("#SubsidyName").val("");
                            $("#BankName").val("");
                            $("#BranchName").val("");
                            $("#TransactionDet2_ChequeNo").val('');
                            $("#TransactionDet2_SubsidyAccountId").val('');
                            $("#TransactionDet2_SubsidyTypeId").val('');
                            $("#divChequeNo").hide();
                            $("#divSubsidyAccountId").hide();
                        }
                    },
                    error: function (error) {
                        alert(error);
                    }
                });

            },
            TotalCalculation:function(){
                var drAmount=0.00;
                var crAmount=0.00;
                $(".table tr").each(function (index) {
                    var length = $(".table tr").length;
                    if (index != 0 && index < length - 1) {
                        drAmount=parseFloat(drAmount)+parseFloat($(this).find($(".drAmount")).html() == 'NaN' || $(this).find($(".drAmount")).html() == "" ? 0.00 : $(this).find($(".drAmount")).html());
                        crAmount =parseFloat(crAmount)+parseFloat($(this).find($(".crAmount")).html() == 'NaN' || $(this).find($(".crAmount")).html() == "" ? 0.00 : $(this).find($(".crAmount")).html());
                    }
                });
                $("#DrTotal").val(drAmount.toFixed(2));
                $("#CrTotal").val(crAmount.toFixed(2));
            },
            EmptySubsidyInfo: function () {
                $("#searchItem").val("");
                $("#SubsidyId").val("");
                $("#SubsidyName").val("");
                $("#BankName").val("");
                $("#BranchName").val("");
                $("#ChequeNo").val("");
                $("#TransactionDet2_SubsidyAccountId").val('');
                $("#TransactionDet2_SubsidyTypeId").val('');
                $("#TransactionDet2_DrAmount").val('');
                $("#TransactionDet2_ChequeNo").val('');
                $("#TransactionDet2_Particulars").val('');
                $("#TransactionDet2_CrAmount").val('');


            },
            VoucherTypeWiseUILoad: function (VoucherTypeId,IsCheckSubsidyExist,SubsidyTypeId) {
                if(SubsidyTypeId==4){//Bank Payment
                    $("#CrAmountId").show();
                    $("#DrAmountId").show();
                    $("#divBankName").show();
                    $("#divBranchName").show();
                    $("#divChequeNo").show();

                }
                else{
                    $("#divChequeNo").hide();
                    $("#CrAmountId").show();
                    $("#DrAmountId").show();
                    $("#divBankName").hide();
                    $("#divBranchName").hide();
                }
                if(IsCheckSubsidyExist=='True'){
                    $("#divSubsidyAccountId").show();
                    $("#searchItem").focus();
                }
                else{
                    $("#divSubsidyAccountId").hide();
                }
            },
            Typehead: function () {
                $('#searchItem').typeahead('destroy');
                $('#searchItem').typeahead({
                    hint: true,
                    highlight: true,
                    minLength:3
                },
                {
                    items: 8,
                    name: 'SubsidyId',
                    displayKey: 'SubsidyName',
                    property: "SubsidyName",
                    source: function (UserName, process) {
                        var url = '@Url.Content("~/SubSidyVM/GetSubsidyByCriteria")';
                        return $.getJSON(url, { searchItem:$('#searchItem').val(),SubsidyTypeId: $("#ddlSubsidyType").val()}, function (data) {
                            return process(data);

                        });
                    },
                    updater: function (item) {
                        return item.Name;
                    }
                }).on('typeahead:selected', function (obj, datum) {

                    $("#SubsidyId").val(datum.SubsidyId);
                    $("#SubsidyName").val(datum.SubsidyName);
                    $("#TransactionDet2_SubsidyAccountId").val(datum.SubsidyAccountId);
                    $("#TransactionDet2_SubsidyTypeId").val(datum.SubsidyTypeId);

                    if(subsidyTypeId==4){//Bank paymnet Type
                        $("#BankName").val(datum.BankName);
                        $("#BankAccountNo").val(datum.BankAccountNo);
                        $("#BranchName").val(datum.BranchName);
                        $("#TransactionDet_ChequeNo").focus();
                    }
                    else{
                        $("#TransactionDet_ChequeNo").val('');
                        $("#divChequeNo").hide();
                        $("#TransactionDet2_DrAmount").focus();
                    }


                });
            },

            TransactionVMSubmit: function () {

                var url = '@Url.Content("~/TransactionVM/CreateOther")';
                var param = JSON.stringify({ 'objTransaction': TransactionVM.Transaction,'objTransactionDetList': TransactionVM.TransactionDet });
                $.ajax({
                    type: "POST",
                    url: url,
                    data: param,
                    success: function (Data) {
                        if (Data) {
                            window.location = '@Url.Content("~/Transaction/index")';
                        }
                        else {
                            alert("Exception occured.");
                        }

                    },
                    contentType: 'application/json; charset=utf-8',
                });
            }

        }

        TransactionVM.Initialize();

        $(document).on('click', 'button.remove', function () {
            var TransactionDetId=0;
            if(confirm("Do You Want to delete?")){
                $(this).parent("td").parent("tr").each(function (index) {

                    $("td", this).each(function (index) {
                        if (index == 6) {
                            $("#DrTotal").val(parseFloat( $("#DrTotal").val()=='NaN'||$("#DrTotal").val()=='NaN'?0.00:$("#DrTotal").val())-parseFloat($(this).html() == 'NaN' || $(this).html() == "" ? 0.00 : $(this).html()));
                        }
                        else if (index ==7) {
                            $("#CrTotal").val(parseFloat( $("#CrTotal").val()=='NaN'||$("#CrTotal").val()=='NaN'?0.00:$("#CrTotal").val())-parseFloat($(this).html() == 'NaN' || $(this).html() == "" ? 0.00 : $(this).html()));
                        }
                        else if (index == 0) {

                            TransactionDetId = $(this).find(":input").val();
                        }
                    });

                });
                $(this).parent("td").parent("tr").remove();
            }
            //var IsDelete=0;
            // if(TransactionDetId>0){
            //     if(confirm("Do You Want to delete?")){

            @*var url = '@Url.Content("~/TransactionVM/Delete")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: "id="+TransactionDetId,
                        dataType: "json",
                        success: function (data) {
                            if (data) {

                                alert("Deleted Successfully.");
                                return true;

                            }
                            else {
                                alert("Exception occured.");
                            }

                        },
                        error: function (error) {
                            alert(error);
                        }
                    });

                    $(this).parent("td").parent("tr").remove();*@
            //        $(this).parent("td").parent("tr").remove();
            //        return true;
            //    }


            //    }
            //else{

            //        $(this).parent("td").parent("tr").remove();
            //}


        });
        $(document).on('click', 'button.EditTransactionDet', function () {

            $(this).parent("td").parent("tr").each(function (index) {
                $("td", this).each(function (index) {
                    if (index == 0) {

                        $("#TransactionDet2_TransactionDetId").val($(this).find(":input").val());
                    }
                    if (index == 1) {
                        var Glid=$(this).find(":input").val();
                        $('#GLAccountDDL').val(Glid);
                        var url = '@Url.Content("~/GLSubsidyTypeMap/IsCheckGLSubsidyExist")';
                        $.ajax({
                            type: "POST",
                            url: url,
                            data: "GLAccountId=" + Glid,
                            dataType: "json",
                            success: function (data) {
                                if(data.IsCheckSubsidyExist=="True"){
                                    $("#ddlSubsidyType").empty();
                                    $("#divSubsidyTypeId").show();
                                    $.each(data.lstSubsidyType, function (index, itemData) {
                                        $("#ddlSubsidyType").append($('<option/>', {
                                            value: data.lstSubsidyType[index]["Key"],
                                            text: data.lstSubsidyType[index]["Value"]
                                        }));
                                        if(data.lstSubsidyType.length==1){
                                            $("#TransactionDet2_SubsidyTypeId").val(data.lstSubsidyType[index]["Key"]);
                                            $("#divSubsidyTypeId").hide();
                                        }
                                        else if(index==0){
                                            $("#TransactionDet2_SubsidyTypeId").val(data.lstSubsidyType[index]["Key"]);
                                        }
                                    });
                                    TransactionVM.VoucherTypeWiseUILoad(@Model.Transaction.VoucherTypeId,data.IsCheckSubsidyExist);
                                }
                                else{
                                    IsSubsidyExsit=data.IsCheckSubsidyExist;
                                    $("#ddlSubsidyType").empty();
                                    $("#divSubsidyTypeId").hide();
                                    TransactionVM.VoucherTypeWiseUILoad(@Model.Transaction.VoucherTypeId,data.IsCheckSubsidyExist);
                                }

                            },
                            error: function (error) {
                                alert(error);
                            }
                        });
                    }
                    if (index == 2) {

                        var subsidyTypeId=$(this).find(":input").val();
                        for(var i=0;i<1;i++){
                            setTimeout(function(){
                                // console.log(new Date());   //It's you code
                                $("#TransactionDet2_SubsidyTypeId").val(subsidyTypeId);
                                $('#ddlSubsidyType').val(subsidyTypeId);
                            },(i+i+1)*1000);
                        }
                    }
                    if (index == 3) {
                        $("#TransactionDet2_SubsidyAccountId").val($(this).find(":input").val());
                    }
                    if (index == 5) {
                        $("#SubsidyName").val($(this).html());
                        $("#searchItem").val($(this).html());
                    }
                    if (index == 6) {
                        $("#TransactionDet2_DrAmount").val($(this).html());
                    }
                    if (index == 7) {
                        $("#TransactionDet2_CrAmount").val($(this).html());
                    }
                    if (index == 8) {
                        $("#TransactionDet2_ChequeNo").val($(this).html());
                    }
                    if (index == 9) {
                        $("#TransactionDet2_Particulars").val($(this).html());
                    }
                    if (index == 10) {
                        $("#SubsidyId").val($(this).find(":input").val());
                    }

                });
            });
        });
        $("#btnSubmit").click(function () {

            var mgs="";
            var drTotal=  $("#DrTotal").val();
            var crTotal=  $("#CrTotal").val();
            if(drTotal!=crTotal){
                alert("Dr Amount and Cr Amount is not same." );
                $("#trTotal").addClass('danger');
                return false;
            }

            if($("#Transaction_TransactionId").val()==0){
                mgs="Do You Want to Create?";
            }
            else{
                mgs="Do You Want to Update?";
            }

            if(confirm(mgs)){
                
                TransactionVM.TransactionDet = new Array;
                var TransactionId=  $("#Transaction_TransactionId").val();
                var TranactionAmount=drTotal;
                var TransactionDate=  $("#Transaction_TransactionDate").val();
                var VoucherId=  $("#Transaction_VoucherId").val();
                var VoucherTypeId=  $("#Transaction_VoucherTypeId").val();
                var Narration=  $("#Transaction_Narration").val();
                TransactionVM.Transaction = {};
                TransactionVM.Transaction = {
                    TransactionId:TransactionId,
                    VoucherId:VoucherId,
                    TransactionDate: TransactionDate,
                    TranactionAmount:TranactionAmount,
                    VoucherTypeId:VoucherTypeId,
                    PRTypeId:1,//Payment
                    IsMultipleOrSingle:1,
                    Narration:Narration
                };
                var SLNo=1;
                $("#tbApplicant tr").each(function (index) {
                    var TransactionDetArr = {
                        TransactionDetId: '',
                        TransactionId: '',
                        TransactionSLNo:'',
                        GLAccountId: '',
                        Particulars:'',
                        DrAmount:'',
                        CrAmount:'',
                        ChequeNo:'',
                        SubsidyTypeId:'',
                        SubsidyAccountId:''
                    }

                    TransactionDetArr.TransactionId = TransactionId;
                    $("td", this).each(function (index) {
                        if (index == 0) {

                            TransactionDetArr.TransactionDetId = $(this).find(":input").val();
                        }
                        if (index == 1) {

                            TransactionDetArr.GLAccountId = $(this).find(":input").val();
                        }
                        if (index == 2) {

                            TransactionDetArr.SubsidyTypeId = $(this).find(":input").val();
                        }
                        if (index == 3) {

                            TransactionDetArr.SubsidyAccountId = $(this).find(":input").val();
                        }
                        if (index == 6) {

                            TransactionDetArr.DrAmount = $(this).html();
                        }
                        if (index == 7) {

                            TransactionDetArr.CrAmount = $(this).html();
                        }
                        if (index == 8) {

                            TransactionDetArr.ChequeNo = $(this).html();
                        }
                        if (index == 9) {

                            TransactionDetArr.Particulars = $(this).html();
                        }
                    });
                    TransactionDetArr.TransactionSLNo=SLNo;
                    SLNo++;
                    TransactionVM.TransactionDet.push(TransactionDetArr);
                });
                if (TransactionVM.TransactionDet.length > 0) {
                    TransactionVM.TransactionVMSubmit();
                }
                else {
                    alert("Transaction list Not found.");
                }

            }
        });

    });


</script>
<script src="~/dist/js/bootstrap-select.js"></script>
@section breadcrumb
{
    <li><a href="~/Dashboard/index">Dashboard</a></li>
    <li>FMS Operation</li>
    <li class="active"> @ViewBag.Title</li>
}

<style type="text/css">
    .backTolist {
        font-size: 1em;
        font-weight: normal;
    }

        .backTolist:hover {
            text-decoration: none;
        }

    .fileSets {
        border: 1px dotted #ddd;
        margin: 0px 10px 20px 0;
        padding: 20px 10px 0px 10px;
    }

    .required:after {
        content: " *";
        color: #f00;
    }
    .twitter-typeahead {
        width: 250px;
    }
    legend.scheduler-border {
        width: inherit; /* Or auto */
        padding: 0 10px; /* To give a bit of padding on the left and right */
        border-bottom: none;
    }
</style>
<p> @Html.ActionLink("Go Back to List", "Index", "Transaction", null, new { @class = "btn btn-success btn-xs" })</p>
<hr />
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(x => x.Transaction.VoucherTypeId)
    @Html.HiddenFor(x => x.Transaction.TransactionId)
    @Html.HiddenFor(x => x.Transaction.VoucherId)

    @Html.HiddenFor(x => x.TransactionDet2.SubsidyAccountId)
    @Html.HiddenFor(x => x.TransactionDet2.TransactionDetId)
    @Html.HiddenFor(x => x.TransactionDet2.SubsidyTypeId)
    <div class="panel-body">
        <div class="col-sm-12 form-group">

            @Html.Label("Voucher Type", new { @class = "col-sm-2 control-label" })
            <div class="col-sm-2">
                @Html.DropDownListFor(model => model.Transaction.VoucherTypeId, new SelectList(Model.Transaction.kvpVoucherType, "Key", "Value", Model.Transaction.VoucherTypeId), "Select VoucherType", new { id = "CompanyDDL", @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.Transaction.VoucherTypeId)

            </div>



            @Html.LabelFor(model => model.Transaction.Narration, new { @class = "col-sm-1 control-label" })
            <div class="col-sm-3">
                @Html.TextAreaFor(model => model.Transaction.Narration, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Transaction.Narration)
            </div>


            @Html.LabelFor(model => model.Transaction.TransactionDate, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-2">
                @Html.TextBoxFor(model => model.Transaction.TransactionDate, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Transaction.TransactionDate)
            </div>      
        </div>

        <div id="" class="row">
            <div class="col-md-12">
                <div class="form-group">

                    @Html.LabelFor(model => model.TransactionDet2.GLAccountId, new { @class = "col-sm-2 control-label required" })
                    <div class="col-sm-4">
                        @Html.DropDownListFor(model => model.TransactionDet2.GLAccountId, new SelectList(Model.TransactionDet2.kvpGLAccount, "Key", "Value", Model.TransactionDet2.GLAccountId), "Select GL Account", new
                   {
                       id = "GLAccountDDL" @*@class = "selectpicker show-tick form-control"*@})
                        @Html.ValidationMessageFor(model => model.TransactionDet2.GLAccountId)
                    </div>
                </div>
            </div>
            <div class="col-md-12" id="divSubsidyTypeId">
                <div class="form-group">
                    @Html.Label("Subsidy Type", new { @class = "col-sm-2 control-label required" })
                    <div class="col-sm-4">
                        @Html.DropDownListFor(model => model.TransactionDet2.SubsidyTypeId, new SelectList(Model.TransactionDet2.kvpSubsidyType, "Key", "Value", Model.TransactionDet2.SubsidyTypeId), "Select Subsidy Type", new { id = "ddlSubsidyType", required = "required" })
                        @Html.ValidationMessageFor(model => model.TransactionDet2.SubsidyTypeId)
                    </div>
                </div>
            </div>
            <div class="col-md-12" id="divSubsidyAccountId">
                <div class="form-group">
                    <div class=" col-md-2">
                        </div>
                        <div class=" col-md-3">
                            @Html.Label("Subsidy Search")
                            <input id="searchItem" class="form-control" type="text" placeholder="Search Subsidy">
                        </div>
                        <div class="col-md-2">
                            @Html.Label("Subsidy Id")
                            <input id="SubsidyId" class="form-control" type="text" readonly placeholder="Subsidy Id">
                        </div>
                        <div class="col-md-3">
                            @Html.Label("Subsidy Name")
                            <input id="SubsidyName" class="form-control" type="text" readonly placeholder="Subsidy Name">
                        </div>
                        <div class=" col-md-2" id="divBankName">
                            @Html.Label("Bank Name")
                            <input id="BankName" class="form-control" readonly type="text" placeholder="Bank Name">
                        </div>
                        <div class=" col-md-2" id="divBranchName">
                            @Html.Label("Branch Name")
                            <input id="BranchName" class="form-control" readonly type="text" placeholder="Branch Name">
                        </div>
                    </div>
            </div>
            <div class="col-md-12">
                <div class="form-group" id="divChequeNo">
                    @Html.LabelFor(model => model.TransactionDet2.ChequeNo, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => model.TransactionDet2.ChequeNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TransactionDet2.ChequeNo)
                    </div>
                </div>
                <div class="form-group">

                    @Html.LabelFor(model => model.TransactionDet2.Particulars, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-6">
                        @Html.TextAreaFor(model => model.TransactionDet2.Particulars, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TransactionDet2.Particulars)
                    </div>
                </div>
                <div class="form-group" id="DrAmountId">

                    @Html.LabelFor(model => model.TransactionDet2.DrAmount, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => model.TransactionDet2.DrAmount, new { @class = "form-control", onkeyup = "InputOnlyDecimalNumber(this);" })
                        @Html.ValidationMessageFor(model => model.TransactionDet2.DrAmount)
                    </div>
                </div>
                <div class="form-group" id="CrAmountId">

                    @Html.LabelFor(model => model.TransactionDet2.CrAmount, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => model.TransactionDet2.CrAmount, new { @class = "form-control", onkeyup = "InputOnlyDecimalNumber(this);" })
                        @Html.ValidationMessageFor(model => model.TransactionDet2.CrAmount)
                    </div>
                </div>

            </div>
            <div class="col-md-2 margin-0">
                <div class="col-md-3">
                    <label>&nbsp;</label>
                    <input id="btnAdd" type="button" value="Add" class="btn btn-primary " />
                </div>
            </div>

        </div>

        <div id="attendees" class="form-group">
            <table id="tblApplicant" class="table table-hover">
                <thead>
                    <tr>
                        <th>GL Account Name</th>
                        <th>Subsidy Name</th>
                        <th>Dr Amount</th>
                        <th>Cr Amount</th>
                        <th>Cheque No</th>
                        <th>Particulars</th>

                        <th></th>
                    </tr>

                </thead>

                <tbody id="tbApplicant" class="connectedSortable"></tbody>

                <tfoot>
                    <tr id="trTotal">
                        <td></td>

                        <td align="right">Total</td>
                        <td>@Html.TextBox("DrTotal", null, new { PlaceHolder = "Dr Total", @disabled = "disabled" })</td>
                        <td> @Html.TextBox("CrTotal", null, new { PlaceHolder = "Cr Total", @disabled = "disabled" })</td>
                        <td></td>
                        <td></td>


                    </tr>
                </tfoot>
            </table>
        </div>
        @if (@Model.Transaction.IsApproved)
        {
            <div class="form-group col-md-12">
                <div>
                    <input id="btnSubmit" type="button" value="Update" disabled="disabled" class="btn btn-default pull-left" />                    
                </div>
            </div>
        }
         else if (@Model.Transaction.TransactionId>0)
        {
            <div class="form-group col-md-12">
                <div>
                    <input id="btnSubmit" type="button" value="Update" class="btn btn-default pull-left" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group col-md-12">
                <div>
                    <input id="btnSubmit" type="button" value="Submit" class="btn btn-default pull-left" />
                </div>
            </div>
        }
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrapth")
}
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>