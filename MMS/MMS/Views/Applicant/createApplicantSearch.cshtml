@using MvcPaging
@model MMS.Entities.ViewModels.SearchApplicantVM

@{
    ViewBag.Title = "Applicant Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/dist/css/bootstrap-select.css">

<link href="~/DropDownSearch/css/select2.min.css" rel="stylesheet" />
<script src="~/DropDownSearch/js/select2.min.js"></script>

<script type="text/javascript">




    $(document).ready(function () {

        var agentInfo = {
            listTemplate: "<tr><td>[materialid]</td><td>[material]</td><td>[RequiredQuantity]</td><td>[AvgPrice]</td><td>[UnitofmeasurementName]</td><td><button type='button' class='remove btn btn-danger btn-sm'><span class='glyphicon glyphicon-remove-sign'></span>Delete</button></td></tr>",
            agent: {

            },
            agent: [],
            Initialize: function () {

                //$("#AgentId").select2({
                //    tags: "true",
                //    placeholder: "Select an option",
                //    allowClear: true
                //});
                //var select = document.getElementById('LocationId');
                //alert(select.length);
                //for (i = 0; i < select.length; i++) {
                //    if (i == 12) {
                //        alert(select.options[i].text);
                //    }
                //    if (select.options[i].value == '[object HTMLOptionElement]') {
                        
                //        select.remove(i);
                //    }
                //}


                //$("#AgentId").select2({
                //    data: AgentId
                //});
                $("#LocationId").select2({
                    data: LocationId
                });
                $("#CountryId").select2({
                    data: CountryId
                });
                $("#ddlDivisionId").select2({
                    data: ddlDivisionId
                });
                $("#ddlDistrict").select2({
                    data: ddlDistrict
                });

                $("#ddlUpazilaId").select2({
                    data: ddlUpazilaId
                });
                $("#CountryId").select2({
                    data: CountryId
                });


                $("#page-leftbar li").removeClass("active");
                $("#liApplicantSearch").addClass("active");
                $("#liApplicantSearchSubMenu").addClass("active");
               // $("#applicantFileLot_AgentId").attr('data-live-search', true);
               // $("#NationalityId").attr('data-live-search', true);
               // $("#ResidentialUpazilaID").attr('data-live-search', true);
               // $("#UpazilaId").attr('data-live-search', true);
              //  $("#DistrictId").attr('data-live-search', true);
             //  $("#CountryId").attr('data-live-search', true);
               $("#AgentId").attr('data-live-search', true);
              
                var optionalLabel = 'Please Select..';
                $('#ddlDivisionId').change(function (event) {

                    if ($('#ddlDivisionId').val() == '' || $('#ddlDivisionId').val() == null) {
                        $("#ddlDistrict").empty();
                        $("#ddlUpazilaId").empty();
                        $("#ddlDistrict").append($('<option/>', {
                            value: "",
                            text: optionalLabel
                        }));
                        $("#ddlUpazilaId").append($('<option/>', {
                            value: "",
                            text: optionalLabel
                        }));
                        return false;
                    }
                    else {
                        LoadDropDownList('ddlDistrict'
                             , '@Url.Content("~/District/GetDistrictByDivisionId")?divisionId=' + $('#ddlDivisionId').val()
                             , "Please Select.."
                              , null);
                        $("#ddlUpazilaId").empty();
                        $("#ddlUpazilaId").append($('<option/>', {
                            value: "",
                            text: optionalLabel
                        }));

                    }



                });
              
                $('#ddlDistrict').change(function (event) {
                    LoadDropDownList('ddlUpazilaId'
                       , '@Url.Content("~/Upazila/GetUpazilaByDistrictId")?districtId=' + $('#ddlDistrict').val()
                    , "Please Select.."
                    , null);
                });
                $("#btnAdd").click(function () {

                });

                $('#applicant_ID').change(function () {
                    var applicantID = $('#applicant_ID').val();

                    var url = "/LocationChangeVM/GetApplicantLocation?Id=" + $("#applicant_ID").val() + "&IsApplicant=true";
                    window.location = url;
                });


            },
            GetAgent: function (id) {
                var url = '@Url.Content("~/Agent/GetAgent")';
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { id: id },
                    dataType: "json",
                    success: function (data) {

                        for (var i = 0; i < data.StockOutList.length; i++) {
                            var value = materialforrequsition.listTemplate.replace("[materialid]", data.StockOutList[i].Material.Id).replace("[material]", data.StockOutList[i].Material.Name).replace("[RequiredQuantity]", data.StockOutList[i].Quantity).replace("[AvgPrice]", data.StockOutList[i].replace("[UnitofmeasurementName]", data.StockOutList[i].Material.Unitofmeasurement.Name));
                            $("#tbmaterials").prepend(value);
                        }
                    },
                    error: function (error) {
                        alert(error);
                    }
                });
            },

        }
        agentInfo.Initialize();
    });

</script>

<script src="~/dist/js/bootstrap-select.js"></script>
@section breadcrumb
{
    <li><a href="~/Dashboard/index">Dashboard</a></li>
    <li>Search</li>
    <li class="active">Applicant Search</li>
}

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }

    .backTolist {
        font-size: 1em;
        font-weight: normal;
    }

        .backTolist:hover {
            text-decoration: none;
        }

    .fileSets {
        border: 1px dotted #ddd;
        margin: 0px 10px 20px 0;
        padding: 20px 10px 0px 10px;
    }

    .required:after {
        content: " *";
        color: #f00;
    }

    legend.scheduler-border {
        width: inherit; /* Or auto */
        padding: 0 10px; /* To give a bit of padding on the left and right */
        border-bottom: none;
    }

    .progress {
        height: 20px;
    }
    /*.lblAgentId{
        width: 100px;
    }*/
    /*.col-sm-3{
        width:22%;
    }
    .col-sm-2{
        width:14%;
    }*/
</style>

@using (Html.BeginForm("GetApplicantSearch", "Applicant", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="panel panel-primary">
       
        <div class="panel-heading">
            <h4>@ViewBag.Title</h4>
            <div class="options">
                <a class="panel-collapse" data-toggle="collapse" href="#ApplicantSearch" aria-expanded="true"><i class=" fa fa-chevron-down"></i></a>
            </div>
        </div>

        <div class="panel-body collapse in" style="border-radius: 0px;" id="ApplicantSearch">
            <div class="row">
                <div class="form-group">

                   
                        @Html.LabelFor(model => model.AgentId, new { @class = "col-sm-2  control-label lblAgentId", id = "" })
                  
                    <div class="col-sm-2">
                        @Html.DropDownListFor(model => model.AgentId, new SelectList(Model.kvpAgent, "Key", "Value", Model.AgentId), "Select Agent", new { @class = "selectpicker show-tick form-control" })
                        @Html.ValidationMessageFor(model => model.AgentId)
                    </div>
                   
                    @Html.LabelFor(model => model.PassportNo, new { @class = "col-sm-1 control-label" })
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => model.PassportNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PassportNo)
                    </div>
                    @Html.Label("App Name", new { @class = "col-sm-1 control-label" })
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => model.ApplicantName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicantName)
                    </div>
                    @Html.LabelFor(model => model.ApplicantId, new { @class = "col-sm-1 control-label" })
                    <div class="col-sm-1">
                        @Html.TextBoxFor(model => model.ApplicantId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicantId)
                    </div>
                </div>

            </div>
            <div class="row">

                <div class="form-group">
                    @Html.LabelFor(model => model.PreRefApplicantId, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => model.PreRefApplicantId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PreRefApplicantId)
                    </div>
                    @Html.LabelFor(model => model.LocationId, new { @class = "col-sm-1 control-label" })
                    <div class="col-sm-2">
                        @Html.DropDownListFor(model => model.LocationId, new SelectList(Model.kvpLocation, "Key", "Value", Model.LocationId), "Select Activity Name", new { @*@class = "selectpicker show-tick form-control"*@ })
                        @Html.ValidationMessageFor(model => model.LocationId)
                    </div>
                    @Html.LabelFor(model => model.CountryId, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-2">
                        @Html.DropDownListFor(model => model.CountryId, new SelectList(Model.kvpCountry, "Key", "Value", Model.CountryId), "Select Country Name", new { @class = "" })
                        @Html.ValidationMessageFor(model => model.CountryId)
                    </div>


                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(model => model.AutoApplicantId, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-1">
                        @Html.TextBoxFor(model => model.AutoApplicantId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AutoApplicantId)
                    </div>
                    @Html.LabelFor(model => model.DivisionId, new { @class = "col-sm-1 control-label" })
                    <div class="col-sm-2">
                        @Html.DropDownListFor(model => model.DivisionId, new SelectList(Model.kvpDivision, "Key", "Value", Model.DivisionId), "Select Division", new { id = "ddlDivisionId" })
                        @Html.ValidationMessageFor(model => model.DivisionId)
                    </div>
                    @Html.LabelFor(model => model.DistrictId, new { @class = "col-sm-1 control-label" })
                    <div class="col-sm-2">
                        @Html.DropDownListFor(model => model.DistrictId, new SelectList(Model.kvpDistrict, "Key", "Value", Model.DistrictId), "Select District", new { id = "ddlDistrict" })
                        @Html.ValidationMessageFor(model => model.DistrictId)
                    </div>
                    @Html.LabelFor(model => model.UpazilaId, new { @class = "col-sm-1 control-label" })
                    <div class="col-sm-2">
                        @Html.DropDownListFor(model => model.UpazilaId, new SelectList(Model.kvpUpazila, "Key", "Value", Model.UpazilaId), "Select Upazil", new { id = "ddlUpazilaId" })
                        @Html.ValidationMessageFor(model => model.UpazilaId)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6 col-sm-offset-3">
                    <div class="btn-toolbar">
                        <input type="submit" value="Search" class="btn-primary btn" />
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="table-responsive">
        @{ Html.RenderPartial("_ApplicantList", Model.iapplicantlist); }
    </div>
}

@section Scripts {

    @*@Scripts.Render("~/bundles/Mask")*@
    @Scripts.Render("~/bundles/jqueryval")



}
