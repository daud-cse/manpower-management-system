@using MvcPaging
@model MvcPaging.IPagedList<MMS.Entities.Models.Applicant>
@{
    ViewBag.Title = "Applicant List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#page-leftbar li").removeClass("active");
        $("#liApplicant").addClass("active");
        $("#liApplicantMapping").addClass("active");
    });
</script>

@section breadcrumb
{
    <li><a href="~/Dashboard/index">Dashboard</a></li>
    <li>Applicant Operation</li>
    <li class="active">Applicant List</li>
}
@section title
{
    @ViewBag.Title
}
<style type="text/css">
    .form-inline .form-control {
        width: 100%;
    }

    .form-inline input {
        max-width: 100%;
        width: 100%;
    }

    .form-inline .form-group {
        width: 80%;
    }

    /*.margin {
        margin-top: 20px;
        margin-bottom: 20px;
    }*/
</style>
@using (Html.BeginForm("Index", "Applicant", FormMethod.Get))
{
    <div class="row margin">
        <div class="col-md-5">
            @*@if ((GolbalSession.gblSession.UserRights.Exists(x => x.Equals(18))))
                {*@
            <p>
            <p> @Html.ActionLink("Create New Applicant", "Create", "ApplicantVM", null, new { @class = "btn btn-success btn-large" })</p>
                
            </p>
            @*}*@
        </div>
        <div class="form-inline col-md-6" style="margin-bottom: 20px">

            <div class="form-group">
                <input type="text" class="form-control " id="searchItem" name="searchItem" placeholder="Search item" value="@ViewData["searchItem"]">
            </div>
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
    <table class="table table-bordered table-hover">
        <thead>
            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Agent.Name)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().ID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().PreRefApplicantId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().ApplicantTypeID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().CurrentLocationID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().NextLocationID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().PassportNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().IsReceivedCompleted)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => item.Agent.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PreRefApplicantId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ApplicantType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location1.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PassportNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsReceivedCompleted)
                    </td>
                    <td>

                        @Html.ActionLink("Edit", "Edit", "ApplicantVM", new { id = item.ID }, new { @class = "btn btn-success" }) 
                        
                    </td>
                </tr>
            }
        <tbody>
    </table>

    <hr />
    <div class="pager">
        @Html.Raw(Html.Pager(
                 new Options
                 {
                     PageSize = Model.PageSize,
                     TotalItemCount = Model.TotalItemCount,
                     CurrentPage = Model.PageNumber,
                     ItemTexts = new ItemTexts() { Next = "Next", Previous = "Previous" },
                     ItemIcon = new ItemIcon() { First = "icon-backward", Previous = "icon-chevron-left", Next = "icon-chevron-right", Last = "icon-forward" },
                     TooltipTitles = new TooltipTitles() { Next = "Next page {0}", Previous = "Previous page {0}", Page = "Go to page {0}" },
                     Size = Size.normal,
                     Alignment = Alignment.centered,
                     IsShowControls = true,
                     IsShowFirstLast = true,
                     IsShowPages = true
                 }, new { searchItem = ViewData["searchItem"] }))
        <div class="well">
            Showing <span class="badge badge-success">@Model.ItemStart</span> to <span class="badge badge-success">@Model.ItemEnd</span>
            of <span class="badge badge-info">@Model.TotalItemCount</span> entries
        </div>
    </div>
}




