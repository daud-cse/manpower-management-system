@model MMS.Entities.Models.MessageMailMaster

@{
    ViewBag.Title = "Message Mail Sent";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {

        var MessageMailMasters = {

            listMessageMailVM: "<tr> <td>[Id]</td><td>[Name]</td><td>[MobileNo]</td><td>[EmailId]</td><td><input type='checkbox'  class='check-box' value='true' checked='checked' id=IsSentId name=[IsSent].IsSent onclick='SetIsActiveValue(this)'></td><td><button type='button' class='remove btn btn-danger btn-sm'><span class='glyphicon glyphicon-remove-sign'></span>Delete</button></td></tr>",
            MessageMailMaster: {
            },
            MessageMailVM: [],
            Initialize: function () {

                $("#page-leftbar li").removeClass("active");
                $("#liAdmin").addClass("active");
                $("#liMessageMailSent").addClass("active");

                $("#divMessageBody").hide();
                $("#divMailBody").hide();

                $("#ddlMessageAreaTypeId").change(function () {
                    var MessageAreaTypeName = $("#ddlMessageAreaTypeId option:selected").text();
                    var MessageAreaTypeId = $("#ddlMessageAreaTypeId option:selected").val();
                    $("#tblistMessageMailVM").empty();                    
                    var url = '@Url.Content("~/MessageMailMaster/GetTypeWiseList")';
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: "MessageAreaTypeId=" + MessageAreaTypeId,
                        dataType: "json",
                        success: function (data) {
                            //if (data.length > 0) {
                            //    $("#attendees").show();
                            //} else {
                            //    $("#attendees").hide();
                            //}
                            for (var i = 0; i < data.length; i++) {
                                var value = MessageMailMasters.listMessageMailVM.replace("[Id]", data[i].Id).replace("[Name]", data[i].Name).replace("[MobileNo]", data[i].MobileNo).replace("[EmailId]", data[i].EmailId).replace("[IsSent]", data[i].IsSent);
                                $("#tblistMessageMailVM").prepend(value);
                            }
                        },
                        error: function (error) {
                            alert(error);
                        }
                    });

                });
                $("#ddlSendingAreaTypeID").change(function () {
                    var sendingAreaTypeID=$("#ddlSendingAreaTypeID option:selected").val();
                    if (sendingAreaTypeID==1) {
                        $("#divMessageBody").show();
                        $("#divMailBody").hide();
                    }
                    else if (sendingAreaTypeID==2) {
                        $("#divMessageBody").hide();
                        $("#divMailBody").show();
                    }
                    else if (sendingAreaTypeID==3) {
                        $("#divMessageBody").show();
                        $("#divMailBody").show();
                    }
                    else {
                        $("#divMessageBody").hide();
                        $("#divMailBody").hide();
                    }

                });
            },
            MessageMailMastersSubmit: function () {

                var url = '@Url.Content("~/MessageMailMaster/VmMessageMail")';
                var param = JSON.stringify({ 'objMessageMailMaster': MessageMailMasters.MessageMailMaster, 'lstMessageMailVM': MessageMailMasters.MessageMailVM });
                $.ajax({
                    type: "POST",
                    url: url,
                    data: param,
                    success: function (Data) {
                        var sendingAreaTypeID = $("#ddlSendingAreaTypeID option:selected").val();
                        if (Data==true) {
                            @*window.location = '@Url.Content("~/Meeting/index")';*@
                          
                            if (sendingAreaTypeID == 1) {
                                alert("Message Sent Successfully.");
                            }
                            else if (sendingAreaTypeID == 2) {
                                alert("Mail Sent Successfully.");
                            }
                            else if (sendingAreaTypeID == 3) {
                                alert("Message and Mail Sent Successfully.");
                            }
                        }
                        else {
                            alert("Exception occured.");
                        }

                    },
                    contentType: 'application/json; charset=utf-8',
                });
            },
            GetAgent: function (id) {
                var url = '@Url.Content("~/Agent/GetAgent")';
                $.ajax({
                    type: "POST",
                    url: url,
                    data: { id: id },
                    dataType: "json",
                    success: function (data) {

                        for (var i = 0; i < data.StockOutList.length; i++) {
                            var value = materialforrequsition.listTemplate.replace("[materialid]", data.StockOutList[i].Material.Id).replace("[material]", data.StockOutList[i].Material.Name).replace("[RequiredQuantity]", data.StockOutList[i].Quantity).replace("[AvgPrice]", data.StockOutList[i].replace("[UnitofmeasurementName]", data.StockOutList[i].Material.Unitofmeasurement.Name));
                            $("#tbmaterials").prepend(value);
                        }
                    },
                    error: function (error) {
                        alert(error);
                    }
                });
            },

        }
        MessageMailMasters.Initialize();
        $(document).on('click', 'button.remove', function () {
            $(this).parent("td").parent("tr").remove();
        });

        $("#btnSubmit").click(function () {

           

            var messageAreaTypeId = $("#ddlMessageAreaTypeId option:selected").val();
            var sendingAreaTypeID = $("#ddlSendingAreaTypeID option:selected").val();
            

            if (messageAreaTypeId == 0 || messageAreaTypeId == '') {
                alert("Area Name is manadatory field");
                $("#MessageAreaTypeId").focus();
                return false;
            }
            if (sendingAreaTypeID == 0 || sendingAreaTypeID == '') {
                alert("Area Type is manadatory field");
                $("#sendingAreaTypeID").focus();
                return false;
            }
            var MessageBody = '';
            var MailBody = '';
            if (sendingAreaTypeID==1) {
                MessageBody = $("#MessageBody").val();

                if (MessageBody=='') {
                    alert("Message Body is not empty.");
                    $("#MessageBody").focus();
                    return false;
                }
            }
            else if (sendingAreaTypeID==2) {
                MailBody = $("#MailBody").val();
                if (MailBody == '') {
                    alert("Mail Body is not empty.");
                    $("#MailBody").focus();
                    return false;
                }

            }
            else if (sendingAreaTypeID==3) {
                MailBody = $("#MailBody").val();
                MessageBody = $("#MessageBody").val();

                if (MailBody == '' && MessageBody=='') {
                    alert("Message and Mail Body is not empty.");
                    $("#MessageBody").focus();
                    return false;
                }
                if (MessageBody == '') {
                    alert("Message Body is not empty.");
                    $("#MessageBody").focus();
                    return false;
                }
                if (MailBody == '') {
                    alert("Mail Body is not empty.");
                    $("#MailBody").focus();
                    return false;
                }

            }
            if (MessageBody.length > 159) {
                alert("Message can not greater than 159 character.");
                $("#MessageBody").focus();
                return false;
            }
           

            MessageMailMasters.MessageMailMaster = {};
            MessageMailMasters.MessageMailMaster = {

                MessageAreaTypeId: messageAreaTypeId,
                MessageBody: MessageBody,
                MailBody: MailBody,
                SendingAreaTypeId: sendingAreaTypeID
            };
            MessageMailMasters.MessageMailVM = new Array;            
            $("#tblistMessageMailVM tr").each(function (index) {
                var MessageMailVMArr = {
                    Id: '',
                    Name: '',
                    MobileNo: '',
                    MessageBody:'',
                    EmailId: '',
                    MailBody:'',
                    IsSent: ''
                }
                $("td", this).each(function (index) {
                    if (index == 0) {

                        MessageMailVMArr.Id = $(this).html();
                    }
                    if (index == 1) {
                        // alert($(this).val());
                        MessageMailVMArr.Name = $(this).html();
                    }

                    if (index == 2) {
                        MessageMailVMArr.MobileNo = $(this).html();
                    }

                    if (index == 3) {
                        MessageMailVMArr.EmailId = $(this).html();
                    }
                    if (index == 4) {
                        // alert($(this).val());
                        MessageMailVMArr.IsSent = $(this).find(":input").val();
                    }

                });
                MessageMailVMArr.MessageBody = MessageBody;
                MessageMailVMArr.MailBody = MailBody;
                MessageMailMasters.MessageMailVM.push(MessageMailVMArr);
            });

            if (MessageMailMasters.MessageMailVM.length > 0) {
                MessageMailMasters.MessageMailMastersSubmit();
            }
            else {
                alert("Please Add Message and Mail Info.");
            }


        });
    });

    function SetIsActiveValue(obj) {
        if (document.getElementById(obj.id).checked) {
            document.getElementById(obj.id).checked = true;
            $('#' + obj.id).val(true);
        }
        else {
            document.getElementById(obj.id).checked = false;
            $('#' + obj.id).val(false);
        }
    }

</script>


@section breadcrumb
{
    <li><a href="~/Dashboard/index">Dashboard</a></li>
    <li>Administration</li>
    <li class="active">Message Mail Send</li>
}
@*@section title
    {
        @ViewBag.Title
    }*@

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }

    .backTolist {
        font-size: 1em;
        font-weight: normal;
    }

        .backTolist:hover {
            text-decoration: none;
        }

    .fileSets {
        border: 1px dotted #ddd;
        margin: 0px 10px 20px 0;
        padding: 20px 10px 0px 10px;
    }

    .required:after {
        content: " *";
        color: #f00;
    }

    legend.scheduler-border {
        width: inherit; /* Or auto */
        padding: 0 10px; /* To give a bit of padding on the left and right */
        border-bottom: none;
    }
</style>


@Html.ValidationSummary(true)

<div class=" col-md-12">

    <div class="panel panel-indigo">
        <div class="panel-heading">
            <h4>Add Your Message or Mail Here</h4>

            <div class="options">

                <a class="panel-collapse" data-toggle="collapse" href="#attendeesCollapse" aria-expanded="true"><i class=" fa fa-chevron-down"></i></a>
                <a href="javascript:;">
                    <i>@*Please Drag and Drop for ordering Attendees.*@</i>
                </a>
            </div>
        </div>
        <div class="panel-body collapse in" id="attendeesCollapse">

            <div class=" col-md-12">
                <div class="col-sm-3">
                    @Html.Label("Area Name")
                </div>

                <div class="col-sm-5">
                    @Html.DropDownListFor(x => x.MessageAreaTypeId, new SelectList(Model.kvpSubsidyType, "Key", "Value", @Model.MessageAreaTypeId), "Select Area", new { id = "ddlMessageAreaTypeId" })
                    @Html.ValidationMessageFor(model => model.MessageAreaTypeId)
                </div>
                <div class="col-sm-3">
                </div>
            </div>
            <br />
            <br />
            <div class=" col-md-12">
                <div class="col-sm-3">
                    @Html.Label("Area Type Name")
                </div>
                <div class="col-sm-5">
                    @Html.DropDownListFor(x => x.SendingAreaTypeId, new SelectList(Model.kvpSendingAreaType, "Key", "Value", @Model.SendingAreaTypeId), "Select Area", new { id = "ddlSendingAreaTypeID" })
                    @Html.ValidationMessageFor(model => model.SendingAreaTypeId)
                </div>
                
                <div class="col-sm-3">
                </div>
            </div>
            <br />
            <br />
            <div class=" col-md-12" id="divMessageBody">
                <div class="col-sm-3">
                    @Html.Label("MessageBody")
                </div>
                <div class="col-sm-6">
                    @Html.TextAreaFor(model => model.MessageBody, new { cols = 62, rows = 5 })
                    @Html.ValidationMessageFor(model => model.MessageBody)
                </div>
                <div class="col-sm-3">
                </div>
            </div>
            <br />
            <br />
            <div class=" col-md-12" id="divMailBody">
                <div class="col-sm-3">
                    @Html.Label("Mail Body")
                </div>
                <div class="col-sm-6">
                    @Html.TextAreaFor(model => model.MailBody, new { cols = 62, rows = 5 })
                    @Html.ValidationMessageFor(model => model.MailBody)
                </div>
                <div class="col-sm-3">
                </div>
            </div>
        </div>

        <hr />


    </div>

</div>
<div id="MessageMail" class="form-group">
    <table id="tblllistMessageMailVM" class="table table-hover">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Mobile No</th>
                <th>Email</th>
                <th>IsSent</th>
                <th></th>

            </tr>

        </thead>
        <hr />
        <hr />
        <tbody id="tblistMessageMailVM" class="connectedSortable"></tbody>

        <tfoot>
            <tr id="">
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        </tfoot>
    </table>
</div>

<div class="hair">
</div>
@*<div class="col-md-1">
    <div class="form-group">
        <div>
            <input id="btnSubmit" type="button" value="Submit" class="btn btn-primary pull-left" />
        </div>
    </div>
</div>*@

@section Scripts {

    @Scripts.Render("~/bundles/Mask")
    @Scripts.Render("~/bundles/jqueryval")


}
